/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "s3eAmazonAds.h"


#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
// For MIPs (and WP8) platform we do not have asm code for stack switching
// implemented. So we make LoaderCallStart call manually to set GlobalLock
#if defined __mips || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP))
#define LOADER_CALL_LOCK
#endif
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef  s3eResult(*s3eAmazonAdsRegister_t)(s3eAmazonAdsCallback cbid, s3eCallback fn, void* userData);
typedef  s3eResult(*s3eAmazonAdsUnRegister_t)(s3eAmazonAdsCallback cbid, s3eCallback fn);
typedef const char*(*s3eAmazonAdsGetErrorString_t)();
typedef s3eAmazonAdsError(*s3eAmazonAdsGetError_t)();
typedef  s3eResult(*s3eAmazonAdsInit_t)(const char* appKey, s3eBool enableTesting, s3eBool enableLogging);
typedef  s3eResult(*s3eAmazonAdsTerminate_t)();
typedef  s3eResult(*s3eAmazonAdsPrepareAd_t)(s3eAmazonAdsId* pId);
typedef  s3eResult(*s3eAmazonAdsPrepareAdLayout_t)(s3eAmazonAdsId id, s3eAmazonAdsPosition position, s3eAmazonAdsSize size, int width, int height);
typedef  s3eResult(*s3eAmazonAdsSetAdTargetingOptions_t)(s3eAmazonAdsId id, s3eAmazonAdsTargetingOptions* options);
typedef s3eAmazonAdsTargetingOptions*(*s3eAmazonAdsGetAdTargetingOptions_t)(s3eAmazonAdsId id);
typedef  s3eResult(*s3eAmazonAdsLoadAd_t)(s3eAmazonAdsId id, s3eBool show, int timeout);
typedef  s3eResult(*s3eAmazonAdsDestroyAd_t)(s3eAmazonAdsId id);
typedef  s3eResult(*s3eAmazonAdsCollapseAd_t)(s3eAmazonAdsId id);
typedef  s3eResult(*s3eAmazonAdsLoadInterstitialAd_t)(s3eAmazonAdsId id);
typedef  s3eResult(*s3eAmazonAdsShowAd_t)(s3eAmazonAdsId id);
typedef  s3eResult(*s3eAmazonAdsInspectAd_t)(s3eAmazonAdsId id, s3eAmazonAdsAdInfo* info);

/**
 * struct that gets filled in by s3eAmazonAdsRegister
 */
typedef struct s3eAmazonAdsFuncs
{
    s3eAmazonAdsRegister_t m_s3eAmazonAdsRegister;
    s3eAmazonAdsUnRegister_t m_s3eAmazonAdsUnRegister;
    s3eAmazonAdsGetErrorString_t m_s3eAmazonAdsGetErrorString;
    s3eAmazonAdsGetError_t m_s3eAmazonAdsGetError;
    s3eAmazonAdsInit_t m_s3eAmazonAdsInit;
    s3eAmazonAdsTerminate_t m_s3eAmazonAdsTerminate;
    s3eAmazonAdsPrepareAd_t m_s3eAmazonAdsPrepareAd;
    s3eAmazonAdsPrepareAdLayout_t m_s3eAmazonAdsPrepareAdLayout;
    s3eAmazonAdsSetAdTargetingOptions_t m_s3eAmazonAdsSetAdTargetingOptions;
    s3eAmazonAdsGetAdTargetingOptions_t m_s3eAmazonAdsGetAdTargetingOptions;
    s3eAmazonAdsLoadAd_t m_s3eAmazonAdsLoadAd;
    s3eAmazonAdsDestroyAd_t m_s3eAmazonAdsDestroyAd;
    s3eAmazonAdsCollapseAd_t m_s3eAmazonAdsCollapseAd;
    s3eAmazonAdsLoadInterstitialAd_t m_s3eAmazonAdsLoadInterstitialAd;
    s3eAmazonAdsShowAd_t m_s3eAmazonAdsShowAd;
    s3eAmazonAdsInspectAd_t m_s3eAmazonAdsInspectAd;
} s3eAmazonAdsFuncs;

static s3eAmazonAdsFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0x8a4487ae, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: s3eAmazonAds");

        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0x8a4487ae, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool s3eAmazonAdsAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult s3eAmazonAdsRegister(s3eAmazonAdsCallback cbid, s3eCallback fn, void* userData)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[0] func: s3eAmazonAdsRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsRegister(cbid, fn, userData);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAmazonAdsUnRegister(s3eAmazonAdsCallback cbid, s3eCallback fn)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[1] func: s3eAmazonAdsUnRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsUnRegister(cbid, fn);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

const char* s3eAmazonAdsGetErrorString()
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[2] func: s3eAmazonAdsGetErrorString"));

    if (!_extLoad())
        return NULL;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    const char* ret = g_Ext.m_s3eAmazonAdsGetErrorString();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eAmazonAdsError s3eAmazonAdsGetError()
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[3] func: s3eAmazonAdsGetError"));

    if (!_extLoad())
        return S3E_AMAZONADS_ERR_NONE;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eAmazonAdsError ret = g_Ext.m_s3eAmazonAdsGetError();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAmazonAdsInit(const char* appKey, s3eBool enableTesting, s3eBool enableLogging)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[4] func: s3eAmazonAdsInit"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsInit(appKey, enableTesting, enableLogging);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAmazonAdsTerminate()
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[5] func: s3eAmazonAdsTerminate"));

    if (!_extLoad())
        return S3E_RESULT_SUCCESS;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsTerminate();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAmazonAdsPrepareAd(s3eAmazonAdsId* pId)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[6] func: s3eAmazonAdsPrepareAd"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsPrepareAd(pId);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAmazonAdsPrepareAdLayout(s3eAmazonAdsId id, s3eAmazonAdsPosition position, s3eAmazonAdsSize size, int width, int height)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[7] func: s3eAmazonAdsPrepareAdLayout"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsPrepareAdLayout(id, position, size, width, height);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAmazonAdsSetAdTargetingOptions(s3eAmazonAdsId id, s3eAmazonAdsTargetingOptions* options)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[8] func: s3eAmazonAdsSetAdTargetingOptions"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsSetAdTargetingOptions(id, options);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eAmazonAdsTargetingOptions* s3eAmazonAdsGetAdTargetingOptions(s3eAmazonAdsId id)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[9] func: s3eAmazonAdsGetAdTargetingOptions"));

    if (!_extLoad())
        return NULL;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eAmazonAdsTargetingOptions* ret = g_Ext.m_s3eAmazonAdsGetAdTargetingOptions(id);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAmazonAdsLoadAd(s3eAmazonAdsId id, s3eBool show, int timeout)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[10] func: s3eAmazonAdsLoadAd"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsLoadAd(id, show, timeout);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAmazonAdsDestroyAd(s3eAmazonAdsId id)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[11] func: s3eAmazonAdsDestroyAd"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsDestroyAd(id);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAmazonAdsCollapseAd(s3eAmazonAdsId id)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[12] func: s3eAmazonAdsCollapseAd"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsCollapseAd(id);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAmazonAdsLoadInterstitialAd(s3eAmazonAdsId id)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[13] func: s3eAmazonAdsLoadInterstitialAd"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsLoadInterstitialAd(id);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAmazonAdsShowAd(s3eAmazonAdsId id)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[14] func: s3eAmazonAdsShowAd"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsShowAd(id);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAmazonAdsInspectAd(s3eAmazonAdsId id, s3eAmazonAdsAdInfo* info)
{
    IwTrace(AMAZONADS_VERBOSE, ("calling s3eAmazonAds[15] func: s3eAmazonAdsInspectAd"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAmazonAdsInspectAd(id, info);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}
